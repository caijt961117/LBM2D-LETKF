# compilers
MPI := mpicxx
CXX := nvcc
CXXFLAGS += -ccbin $(MPI)

## compiler options 
### c++ default flag
CXXFLAGS += -g -O3 -std=c++14
#CXXFLAGS += -sox -traceback ## debug info

### openmp
MPICXX_BACKEND := $(firstword $(shell $(MPI) -show))
ifeq ("$(MPICXX_BACKEND)", "pgc++")
OMPFLAG := -mp
else
ifeq ("$(MPICXX_BACKEND)", "icpc")
OMPFLAG := -qopenmp
else
OMPFLAG := -fopenmp
endif
endif
CXXFLAGS += -Xcompiler=$(OMPFLAG)

### cuda
#### 1. find nvcc path
ifeq ("$(shell which nvcc > /dev/null 2>&1 && echo nvcc)", "")
$(error No CUDA Compiler found.)
endif
CUDA_PATH ?= $(shell which nvcc | sed -e 's,/bin/nvcc,,g')
#### 2. find cuda arch; first try deviceQuery, second set default sm
ifeq ("","$(ARCH)")
ARCH_NUMBER := $(shell ($(CUDA_PATH)/extras/demo_suite/deviceQuery | grep 'CUDA Capability' | head -n1 | grep -o -e '[0-9].[0-9]' | tr -d '\.') 2>/dev/null )
ifeq ("","$(ARCH_NUMBER)")
ARCH_NUMBER := 80 # default
endif
ARCH ?= sm_$(ARCH_NUMBER)
endif
#### 3. set nvcc options
CXXFLAGS += -arch=$(ARCH)
CXXFLAGS += -restrict
CXXFLAGS += --expt-extended-lambda
CXXFLAGS += -use_fast_math
CXXFLAGS += --default-stream per-thread
#CXXFLAGS += -Xptxas -v -lineinfo
CXXFLAGS += -maxrregcount 128
CXXFLAGS += --nvlink-options -Werror
#### 4. cuda path to cpp
CXXFLAGS += -I$(CUDA_PATH)/include

### linker
LD := $(CXX)
LDFLAGS += -ccbin $(MPI)
LDFLAGS += -L$(CUDA_PATH)/lib64 -lcudart
LDFLAGS += -lcurand
LDFLAGS += -lcublas -lcusolver
LDFLAGS += -Xcompiler=$(OMPFLAG)
LDFLAGS += -lm -lstdc++ -lz
LDFLAGS += -lhdf5 -lhdf5_hl
